# Constants for the hardware modules that compose PASCAL
gantry:
  # communcation
  # serialid: "55838333932351108212" #LINUX ONLY hardware ID of gantry control board. Used to find correct COM port
  device_identifiers:
    vid: 7855 #vendor id, converted from hex to integer. WINDOWS ONLY can be determined by https://interworks.com/blog/ijahanshahi/2014/07/18/identify-vid-pid-usb-device/
    pid: 4 #product id, converted from hex to integer. WINDOWS ONLY. see link above
    location: "1-1.2.4" #WINDOWS + GANTRY ONLY
  pollingrate: 0.05 #delay (seconds) between sending a command and reading a response
  timeout: 15 #max time (seconds) allotted to gantry motion before flagging a movement error

  # movement
  positiontolerance: 0.05 #tolerance (mm) for movements to be considered complete
  speed_max: 10000 #max gantry speed, mm/min
  speed_min: 500 #min gantry speed, mm/min
  zhop_height: 5 #vertical clearance (mm) to use when moving between two points. will move this amount above the highest z point
  idle_coordinates: [192.25, 27.4, 82] #coordinates to move the gantry to when idle, mainly to avoid cameras
  opentrons_z: 83 #above this point, the gantry will collide with the opentrons frame
  opentrons_y: 195.3 #above this point, the gantry will collide with the opentrons frame
  opentrons_x: 190.5 #below this point, the gantry will enter the opentrons frame
  overall_gantry_limits:
    x_max: 567.0 #max x position (mm)
    x_min: 0     #min x position (mm)
    y_max: 282.0 #max y position (mm)
    y_min: 0     #min y position (mm)
    z_max: 166.0 #max z position (mm)
    z_min: 0     #min z position (mm)
  workspace_limits: #gantry limits in workspace frame
    x_max: 567.0 #max x position (mm)
    x_min: 192.25 #min x position (mm)
    y_max: 282.0 #max y position (mm)
    y_min: 0     #min y position (mm)
    z_max: 166.0 #max z position (mm)
    z_min: 0     #min z position (mm)
  opentrons_limits: #gantry limits in opentrons frame
    x_max: 192.25
    x_min: 0
    y_max: 200.7
    y_min: 10
    z_max: 82
    z_min: 0
  # transition_coordinates: [192.25, 195.3, 83] #coordinate to move to when transitioning between workspace and OT2 frames
  transition_coordinates: [192.25, 27.4, 82] #spincoater in deck slot 3

gripper:
  #communication
  device_identifiers:
      vid: 1027 #WINDOWS ONLY
      pid: 24597 #WINDOWS ONLY
      serial_number: "DN066QRWA" 
  pollingrate: 0.05 #delay (seconds) between sending a command and reading a response
  timeout: 10 #max time (seconds) allotted to gripper motion before flagging a movement error
  width_max: 28.2  #maximum opening width (mm)
  width_min: 5.6 #minimum opening width (mm)
  pwm_max: 1400  #pulse width (us) corresponding to minimum width
  pwm_min: 650   #pulse width (us) corresponding to maximum width
  extra_opening_width_pick: 3.7 #extra width (mm) to open gripper when moving to pick up a sample
  extra_opening_width_place: 2.2 #extra width (mm) to open gripper when placing a sample. should be less than on picking!
  # slow_movement_interval: 0.7 #time (s) between intermediate servo setpoints when opening/closing slowly
  slow_interval: 7 #rate (us pwm/ 10 ms) to open at during "slow" setting
  fast_interval: 50 #rate to open at during "fast" setting
  idle_timeout: 30 #gripper idle time (seconds) after which automatically closes. To prevent servo burnout (fighting the spring to stay open)
  springs_loaded_threshold: 2000 #(650 original value) if the gripper load reading is below this value, we assume the springs are not applying load onto the gripper fingers (ie sample is clasped)
  catch_attempts: 3 #number of times to try picking up a sample before erroring out

hotplate:
  p0: [273.4, 217.5, 88] #initial guess [x,y,z] coordinates for gantry to center over bottom left corner slot. Safer to overestimate z value here to avoid collisions

liquidhandler:
  pollingrate: 0.5 #delay (seconds) between checks for new commands to push to liquid handler server
  server:
    ip: '169.254.160.20' #this is the external IP of the OT2 robot, can be found in the OT2 app!
    port: 8764

sampletray:
  p0: [495.7,17.5,65.2] #initial guess [x,y,z] coordinates for gantry to center over bottom left corner slot. Safer to overestimate z value here to avoid collisions

spincoater:
  # communication
  device_identifiers: #for the arduino controlling the vacuum solenoid
    # serialid: #LINUX ONLY "558383339323513140D1" #hardware ID of spincoater arduino. Used to find correct COM port
      vid: 9025 #WINDOWS ONLY
      pid: 67 #WINDOWS ONLY
      serial_number: '55838333932351108212'
  switchindex: "vacuumsolenoid" #key for switchbox relay that controls the vacuum solenoid (look at line ~32 in frgpascal.hardware.switchbox)
  pollingrate: 0.5 #delay (seconds) between communication to the arduino
  # movement
  p0: [4.3, 34.7, 61.8] #initial guess [x,y,z] coordinates for gantry to center over the chuck. Safer to overestimate z value here to avoid collisions
  rpm_max: 10000 #maximum angular velocity (rpm) the spincoater can hit
  rpm_min: 300 #minimum angular velocity (rpm) the spincoater can hit
  acceleration_max: 10000 #maximum angular acceleration (rpm/s) the spincoater can hit
  acceleration_min: 50 #maximum angular acceleration (rpm/s) the spincoater can hit
  logging_interval: 0.2 #interval (seconds) at which to log spincoating rpm
  vacuum_disengagement_time: 5 #delay (seconds) after closing vacuum solenoid -> vacuum releasing at the chuck
characterizationline:
  #movement
  axis:
    device_identifiers:
    # serialid: TODO
      vid: 7855 #WINDOWS ONLY
      pid: 4 #WINDOWS ONLY
      location: "1-1.1" #WINDOWS
    pollingrate: 0.05
    timeout: 20 #max time (seconds) to allow movement before flagging an error
    positiontolerance: 0.05 #tolerance (mm) for movements to be considered complete
    x_max: 400.0 #max x position (mm)
    x_min: 0     #min x position (mm)
    transfer_position: 0 #x coordinate to transfer samples to/from gantry
    p0: [565, 250.3, 60.1] #initial guess for coordinates for gantry to center over slot. safe to overestimate z here to avoid crashes
  #hardware shared across stations
  switchbox:
    device_identifiers:
      vid: 10777
      pid: 3075
    pollingrate: 0.2
    relayresponsetime: 0.01 #seconds between telling relay to do something -> relay doing it
  shutter:
    device_identifiers:
      vid: 9025
      pid: 67
      serial_number: "95033313031351611262"
    pollingrate: 0.2
  filterslider:
    device_identifiers:
      vid: 1027
      pid: 24597
      serial_number: "DK0AJS9DA"
    top: "0" #address/index for top shutter. This should be a string!
    bottom: "2" #address/index for bottom shutter. This should be a string!
    pollingrate: 0.2
    shutterresponsetime: 2 #seconds between telling the shutter to move -> shutter completing the move
  #individual stations
  darkfield:
    cameraid: '12316' #serial number for Thorlabs Camera
    position: 54.4 #position (mm) at which characterization axis centers sample in FOV
    switchindex: 9 #switchbox plug index for light source (ring light)
  pl_imaging:
    # cameraid: SAME AS DARKFIELD, NO NEED TO INPUT HERE #serial number for Thorlabs Camera #same camera as darkfield
    position: 54.4 #position (mm) at which characterization axis centers sample in FOV
    switchindex: 12 #switchbox plug index for light source (blue LED lamp)
  brightfield:
    cameraid: '12519' #serial number for Thorlabs Camera
    position: 165.4 #position (mm) at which characterization axis centers sample in FOV
    switchindex: 8 #switchbox plug index for light source (ring light)
  pl_blue: #spectroscopy
    position: 285
    switchindex: 5
  pl_red: #spectroscopy
    position: 285 #position (mm) at which characterization axis centers sample in FOV
    switchindex: 4 #switchbox plug index for light source (red laser)
  transmission: #spectroscopy
    position: 285 #position (mm) at which characterization axis centers sample in FOV
  #fourpointprobe:
    # position:397.5
  